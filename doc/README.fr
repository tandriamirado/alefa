Introduction
============
"alefa" veut dire "lancer" en langue malgache.

"alefa" est un utilitaire en ligne de commande qui permet de contrôler le lancement et l'exécution d'autres programmes.
Il est par exemple souvent utile de devoir faire des scripts plus ou moins simples pour relancer certaines commandes jusqu'à ce qu'elles "réussissent" leurs actions, d'en lancer d'autres indéfiniment. De simuler la possibilité pour une application d'accepter une liste de fichiers comme argument en ligne de commande, etc.. Il y a de nombreux cas d'utilisation. Assez de temps perdu:

Les cas d'utilisations sont nombreuses et courantes, pourtant c'est toujours quand on est pressé et qu'on n'a pas le temps ni l'humeur de taper de tels scripts qu'on doit le faire. Certaines choses devraient être automatisables facilement afin que l'on puisse faire autre chose sans être déconcentré et sans avoir à relancer une commande de malheur soi-même manuellement: sans avoir à créer de tels scripts!

"alefa" y remédie.

"alefa" retourne le dernier ExitCode de l'application lancée, de sorte que vous pouvez en faire quelque chose et agir en conséquence.

Synopsys
========
alefa [OPTION]... FICHIER
      Execute FICHIER. FICHIER doit être le dernier argument, après toutes les OPTIONs d'alefa.

alefa [OPTION]... "FICHIER [--OPTIONS]"
      Execute FICHIER avec ses OPTIONS. FICHIER doit être le dernier argument, après toutes les OPTIONs d'alefa. Notez les guillemets englobant le fichier exécutable à lancer et ses options.

Les arguments obligatoires aux options longues le sont aussi pour les options courtes.

Options
=======
       -h,  --help
              Show the help screen.

       -i,  --infinite
              Re-run until the end of time (or until interrupted by ctrl + c)

       -l   --file_list
              Run command on each file in the list

       -t,  --tries=NUMBER
              Set number of retries to NUMBER (0 unlimits).

       -u,  --unlimits
              Tries until exit code = 0 (equiv: --tries=0).

       -w,  --wait=SECONDS
              Wait SECONDS seconds between retries. Default: 1 second.

       -x,  --exitcode
              Show exitcode. Can be useful for testing purposes.

Exemples
========
Les exemples ne manquent pas:
* essayer de se connecter par ssh à un serveur en train de rebooter quelque part dans le monde, toutes les 5 secondes jusqu'à ce que ça réussisse. En cas de perte de connexion, retenter de nouveau toutes les 5 secondes automatiquement. Quand vous sortirez de vous-même de la session ssh par "exit", "alefa" arretera aussi ses tentatives et vous fera retourner au prompt:

alefa -u -w 5 "ssh my.server.org"

* vérifier régulièrement l'espace disque disponible sur /tmp pendant une longue et grosse copie de fichiers en cours dans ce répertoire. Interrompre par ctrl + c:

alefa -i -w 10 "df -h /tmp"

* Essaie de pinger un site web 10 fois seulement, toutes les 30 secondes. Montre l'exitcode après chaque tentative. Vous prévient par une boite de dialogue de message quand la connexion marche à nouveau:

alefa -t 10 -w 30 -x "ping -c 1 www.debian.org" && gdialog --msgbox "The Internet connexion is back!" 5 40

Bugs
====
J'utilise "alefa" tous les jours depuis sa création en 2008. J'ai décidé de le publier, étant certain qu'il vous sera utile. Il l'est déjà, mais beaucoup de fonctionnalités seront ajoutées au fur et à mesure, et je les sortirai dorénavant dès qu'elles seront publiables.
N'hésitez pas alors à faire des propositions selon vos besoins journaliers, et à me signaler les bugs.

N'hésitez pas à faire des suggestions basées sur vos besoins journalières.
Signalez les bugs à <thierry.andriamirado@gmail.com>

Sites web
=========
https://github.com/tandriamirado/alefa
https://www.facebook.com/thierryapps/

Nota Bene
=========
* Même si "alefa" est déjà largement utilisable, beaucoup d'autres fonctionnalités pratiques sont en cours de développement et sortiront au fur et à mesure. Revenez régulièrement pour en bénéficier.
* De même, des versions binaires directement utilisables sans compilation seront accessibles en ligne.
* Cette version fonctionne actuellement sous Linux (32bits et 64bits): une version ultérieure fonctionnera sous windows dans peu de temps.

Auteur
======
Thierry Andriamirado <thierry.andriamirado@gmail.com>
https://www.facebook.com/thierryapps/

Copyright and License
=====================
Copyright 2008-2025 Thierry Andriamirado.

GNU General Public License; either version 2 of  the  License, or (at your option) any later version.

